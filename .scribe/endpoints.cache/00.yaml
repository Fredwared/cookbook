## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - PATCH
    uri: 'api/v1/products/{product_id}/{media_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Current Preview'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      product_id:
        name: product_id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
      media_id:
        name: media_id
        description: 'The ID of the media.'
        required: true
        example: 4
        type: integer
        custom: []
    cleanUrlParameters:
      product_id: 1
      media_id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of products'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: null
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/products
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the product.'
        required: true
        example: 'gaming pc'
        type: string
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: esse
        type: string
        custom: []
      brand_id:
        name: brand_id
        description: ''
        required: true
        example: itaque
        type: string
        custom: []
      description:
        name: description
        description: 'Description of the product.'
        required: false
        example: 'this is the last gen gaming pc,'
        type: required
        custom: []
      price:
        name: price
        description: 'Price of the product.'
        required: false
        example: '120.99'
        type: required
        custom: []
      images:
        name: images
        description: 'array Image of the product.'
        required: false
        example: libero
        type: required
        custom: []
      attributes:
        name: attributes
        description: 'array Attributes of the product.'
        required: false
        example: color
        type: required
        custom: []
      'attributes[].name':
        name: 'attributes[].name'
        description: ''
        required: true
        example: eligendi
        type: string
        custom: []
      'attributes[].value':
        name: 'attributes[].value'
        description: ''
        required: true
        example: non
        type: string
        custom: []
      category:
        name: category
        description: 'Category of the product.'
        required: false
        example: pc
        type: required
        custom: []
      brand:
        name: brand
        description: 'Brand of the product.'
        required: false
        example: samsung
        type: required
        custom: []
    cleanBodyParameters:
      name: 'gaming pc'
      category_id: esse
      brand_id: itaque
      description: 'this is the last gen gaming pc,'
      price: '120.99'
      images: libero
      attributes: color
      category: pc
      brand: samsung
    fileParameters: []
    responses:
      -
        status: 200
        content: null
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"new product created successfully\",\r\n  \"data\": {\r\n    \"id\": 4,\r\n    \"name\": \"gaming pc\",\r\n    \"description\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"category\": \"pc\",\r\n    \"brand\": \"samsung\",\r\n    \"price\": 99.99\r\n  },\r\n\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show individual product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: null
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update existing product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the product.'
        required: true
        example: 'gaming pc'
        type: string
        custom: []
      category_id:
        name: category_id
        description: ''
        required: true
        example: deleniti
        type: string
        custom: []
      brand_id:
        name: brand_id
        description: ''
        required: true
        example: non
        type: string
        custom: []
      description:
        name: description
        description: 'Description of the product.'
        required: false
        example: 'this is the last gen gaming pc,'
        type: required
        custom: []
      price:
        name: price
        description: 'Price of the product.'
        required: false
        example: '120.99'
        type: required
        custom: []
      images:
        name: images
        description: 'Must be an image. Must not be greater than 2048 kilobytes.'
        required: false
        example:
          - null
        type: 'file[]'
        custom: []
      attributes:
        name: attributes
        description: 'array Attributes of the product.'
        required: false
        example: color
        type: required
        custom: []
      'attributes[].name':
        name: 'attributes[].name'
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
      'attributes[].value':
        name: 'attributes[].value'
        description: ''
        required: true
        example: hic
        type: string
        custom: []
      category:
        name: category
        description: 'Category of the product.'
        required: false
        example: pc
        type: required
        custom: []
      brand:
        name: brand
        description: 'Brand of the product.'
        required: false
        example: samsung
        type: required
        custom: []
    cleanBodyParameters:
      name: 'gaming pc'
      category_id: deleniti
      brand_id: non
      description: 'this is the last gen gaming pc,'
      price: '120.99'
      attributes: color
      category: pc
      brand: samsung
    fileParameters:
      images:
        - null
    responses:
      -
        status: 200
        content: null
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"proudct updated successfully\",\r\n  \"data\": {\r\n    \"id\": 4,\r\n    \"name\": \"gaming pc\",\r\n    \"description\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"category\": \"pc\",\r\n    \"brand\": \"samsung\",\r\n    \"price\": 99.99\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/products/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing product'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message":"Product deleted successfully"
           }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of categories'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":11,"name":"atque","childrens":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/categories
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the category.'
        required: true
        example: sport
        type: string
        custom: []
      parent_id:
        name: parent_id
        description: 'nullable ID of the parent category for subcategory.'
        required: false
        example: 5
        type: integer
        custom: []
    cleanBodyParameters:
      name: sport
      parent_id: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":12,"name":"quo","childrens":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"data\": {\r\n    \"id\": 1,\r\n    \"name\": \"sport\",\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show each individual category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":13,"name":"soluta","childrens":[]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update existing category or it's subcategories"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the category.'
        required: true
        example: sport
        type: string
        custom: []
      parent_id:
        name: parent_id
        description: 'nullable ID of the parent category for subcategory.'
        required: false
        example: 11
        type: integer
        custom: []
    cleanBodyParameters:
      name: sport
      parent_id: 11
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":14,"name":"enim","childrens":[]}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"data\": {\r\n    \"id\": 1,\r\n    \"name\": \"sport\",\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/categories/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete existing category or it's subcategories"
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message":"Category deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/reviews
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of reviews'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"body":"Et sed accusamus eos est. Voluptatem velit eaque non porro in natus et. In porro veritatis et quae. Voluptates ducimus qui exercitationem perferendis sint maxime amet. Eos repellat mollitia laudantium deleniti praesentium nobis. Id vero in et repellendus minima. Dolorem consequatur distinctio laborum consequatur."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/reviews
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new review'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'string Body of the review.'
        required: false
        example: 'the worst product ever'
        type: required
        custom: []
      product_id:
        name: product_id
        description: 'ID of product related to the review'
        required: false
        example: rerum
        type: required
        custom: []
    cleanBodyParameters:
      content: 'the worst product ever'
      product_id: rerum
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"body":"Veritatis quis blanditiis facilis dolorum. Ipsum est amet nam fugit eos ut animi. Facere quam dicta excepturi veritatis. Sunt consequatur voluptas sequi. Placeat voluptatum omnis neque delectus reiciendis voluptatibus. Veniam in nemo aut quod quam enim cumque. Eum ea quia molestiae quia et."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"new review created successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"content\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"product_id\": 5\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show each individual category'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"body":"Nobis harum quia dolorum assumenda non. Aliquid atque voluptatem debitis a. Sed dolores sunt rerum quia qui quia. Est et suscipit neque maxime repellendus. Dolorem iure fuga id. Consequuntur at aut maxime ratione provident."}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a existing resource'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      content:
        name: content
        description: 'string Body of the review.'
        required: false
        example: 'the worst product ever'
        type: required
        custom: []
      product_id:
        name: product_id
        description: 'ID of product related to the review'
        required: false
        example: exercitationem
        type: required
        custom: []
    cleanBodyParameters:
      content: 'the worst product ever'
      product_id: exercitationem
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"body":"Aut qui necessitatibus quod dolore. Saepe tempora blanditiis error rerum aut quia. Non repudiandae recusandae et et aut sequi eligendi mollitia. Vel consectetur ipsa aut reiciendis ut. Delectus ea esse quas est labore quia suscipit. Commodi odio necessitatibus consequatur sed. Porro mollitia est facilis maxime."}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"review updated successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"content\": \"t is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy.\",\r\n    \"product_id\": 5\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/reviews/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing review'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the review.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of brands'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":11,"name":"laboriosam"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/brands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the brand. Example apple'
        required: false
        example: atque
        type: required
        custom: []
    cleanBodyParameters:
      name: atque
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":12,"name":"ab"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"New brand created successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"name\": \"Apple\"\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show individual Brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":13,"name":"ut"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the brand. Example apple'
        required: false
        example: est
        type: required
        custom: []
    cleanBodyParameters:
      name: est
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":14,"name":"qui"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"message\": \"Brand updated created successfully\",\r\n  \"data\": {\r\n    \"id\": 3,\r\n    \"name\": \"Apple\"\r\n  }\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing brand'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/currencies/list
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the list of currencies fetched from api'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"name":null,"value":null,"code":null}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/currencies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show collection of currencies'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"code":"UZS","name":"Uzbek Sum","value":11320}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/currencies
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new currency'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Code of the currency.'
        required: false
        example: USD
        type: required
        custom: []
      name:
        name: name
        description: 'Name of the currency.'
        required: true
        example: 'US Dollar'
        type: string
        custom: []
      value:
        name: value
        description: 'Value of the currency.'
        required: false
        example: 'US Dollar = 11000 Uzbek Sum,'
        type: required
        custom: []
    cleanBodyParameters:
      code: USD
      name: 'US Dollar'
      value: 'US Dollar = 11000 Uzbek Sum,'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"code":"UZS","name":"Uzbek Sum","value":11320}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/currencies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show individual currency'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the currency.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":1,"code":"UZS","name":"Uzbek Sum","value":11320}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/currencies/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete existing currency'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the currency.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Register'
      description: 'This endpoint will allow to register users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Username of user.'
        required: true
        example: Admin
        type: string
        custom: []
      email:
        name: email
        description: 'unique Email of user.'
        required: true
        example: admin@gmail.com
        type: email
        custom: []
      firstname:
        name: firstname
        description: 'Firstname of user.'
        required: true
        example: Avaz
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'Lastname of user.'
        required: true
        example: Akhmedov
        type: string
        custom: []
      password:
        name: password
        description: 'Password of user.'
        required: false
        example: 123asd2
        type: required
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirm previous password.'
        required: false
        example: 123asd2
        type: required
        custom: []
    cleanBodyParameters:
      username: Admin
      email: admin@gmail.com
      firstname: Avaz
      lastname: Akhmedov
      password: 123asd2
      password_confirmation: 123asd2
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"username":"Kayley Botsford","email":"amina87@example.org","firstname":"Lukas Wiza Sr.","lastname":"Daugherty"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"data\": {\r\n    \"username\": \"Avaz\",\r\n    \"email\": \"avaz@gmail.com\",\r\n    \"firstname\": \"Avaz\",\r\n    \"lastname\": \"Akhmedov\"\r\n  },\r\n  \"message\": \"User created successfully\"\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Login'
      description: 'This endpoint will allow to log in users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer {token}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email of existing user.'
        required: false
        example: admin@gmail.com
        type: required
        custom: []
      password:
        name: password
        description: 'Password of existing user.'
        required: false
        example: 123asd2
        type: required
        custom: []
    cleanBodyParameters:
      email: admin@gmail.com
      password: 123asd2
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"username":"Abbie Blanda","email":"tfeil@example.com","firstname":"Ms. Lilliana Reichel Sr.","lastname":"Sanford"}}'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n  \"token\": \"32|U888YUcdCveAbJWyeSR3Ndm06ibolHiUxghlxH3N\"\r\n  \"data\": {\r\n    \"username\": \"Avaz\",\r\n    \"email\": \"avaz@gmail.com\",\r\n    \"firstname\": \"Avaz\",\r\n    \"lastname\": \"Akhmedov\"\r\n  },\r\n  \"message\": \"Welcome back Avaz\"\r\n}"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'User Logout'
      description: 'This endpoint will allow to log out users'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization/Type:Bearer': 'Token. Example: 44|cSi4RtDPHw6vjnqiR3oKUP1x963fj1VcW9fMLmUF'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message":"User logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
